// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/network/components.proto

#include "common/network/components.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
template <typename>
PROTOBUF_CONSTEXPR SpritePB::SpritePB(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.texture_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SpritePBDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpritePBDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpritePBDefaultTypeInternal() {}
  union {
    SpritePB _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpritePBDefaultTypeInternal _SpritePB_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ClientConnect::ClientConnect(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_)*/ {
    &::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized {}
  }

  , /*decltype(_impl_.id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ClientConnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientConnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientConnectDefaultTypeInternal() {}
  union {
    ClientConnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientConnectDefaultTypeInternal _ClientConnect_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ClientDisconnect::ClientDisconnect(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ClientDisconnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientDisconnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientDisconnectDefaultTypeInternal() {}
  union {
    ClientDisconnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientDisconnectDefaultTypeInternal _ClientDisconnect_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR UpdateComponent::UpdateComponent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.components_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct UpdateComponentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateComponentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateComponentDefaultTypeInternal() {}
  union {
    UpdateComponent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateComponentDefaultTypeInternal _UpdateComponent_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR CreateComponent::CreateComponent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_id_)*/ ::uint64_t{0u}

  , /*decltype(_impl_.components_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct CreateComponentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateComponentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateComponentDefaultTypeInternal() {}
  union {
    CreateComponent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateComponentDefaultTypeInternal _CreateComponent_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Packet::Packet(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.commands_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct PacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PacketDefaultTypeInternal() {}
  union {
    Packet _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PacketDefaultTypeInternal _Packet_default_instance_;
static ::_pb::Metadata file_level_metadata_common_2fnetwork_2fcomponents_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_2fnetwork_2fcomponents_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2fnetwork_2fcomponents_2eproto = nullptr;
const ::uint32_t TableStruct_common_2fnetwork_2fcomponents_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SpritePB, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SpritePB, _impl_.texture_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ClientConnect, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ClientConnect, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::ClientConnect, _impl_.user_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ClientDisconnect, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ClientDisconnect, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::UpdateComponent, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::UpdateComponent, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::UpdateComponent, _impl_.entity_id_),
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::UpdateComponent, _impl_.components_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CreateComponent, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::CreateComponent, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CreateComponent, _impl_.entity_id_),
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::CreateComponent, _impl_.components_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Packet, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::Packet, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::Packet, _impl_.commands_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::SpritePB)},
        { 9, -1, -1, sizeof(::ClientConnect)},
        { 19, -1, -1, sizeof(::ClientDisconnect)},
        { 28, -1, -1, sizeof(::UpdateComponent)},
        { 39, -1, -1, sizeof(::CreateComponent)},
        { 50, -1, -1, sizeof(::Packet)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_SpritePB_default_instance_._instance,
    &::_ClientConnect_default_instance_._instance,
    &::_ClientDisconnect_default_instance_._instance,
    &::_UpdateComponent_default_instance_._instance,
    &::_CreateComponent_default_instance_._instance,
    &::_Packet_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fnetwork_2fcomponents_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037common/network/components.proto\"\033\n\010Spr"
    "itePB\022\017\n\007texture\030\001 \001(\t\")\n\rClientConnect\022"
    "\n\n\002id\030\001 \001(\004\022\014\n\004user\030\002 \001(\t\"\036\n\020ClientDisco"
    "nnect\022\n\n\002id\030\001 \001(\004\"O\n\017UpdateComponent\022\021\n\t"
    "entity_id\030\001 \001(\004\022\033\n\006sprite\030\002 \001(\0132\t.Sprite"
    "PBH\000B\014\n\ncomponents\"O\n\017CreateComponent\022\021\n"
    "\tentity_id\030\001 \001(\004\022\033\n\006sprite\030\002 \001(\0132\t.Sprit"
    "ePBH\000B\014\n\ncomponents\"\312\001\n\006Packet\022(\n\016client"
    "_connect\030\001 \001(\0132\016.ClientConnectH\000\022.\n\021clie"
    "nt_disconnect\030\002 \001(\0132\021.ClientDisconnectH\000"
    "\022,\n\020update_component\030\003 \001(\0132\020.UpdateCompo"
    "nentH\000\022,\n\020create_component\030\004 \001(\0132\020.Creat"
    "eComponentH\000B\n\n\010commandsb\006proto3"
};
static ::absl::once_flag descriptor_table_common_2fnetwork_2fcomponents_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2fnetwork_2fcomponents_2eproto = {
    false,
    false,
    512,
    descriptor_table_protodef_common_2fnetwork_2fcomponents_2eproto,
    "common/network/components.proto",
    &descriptor_table_common_2fnetwork_2fcomponents_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_common_2fnetwork_2fcomponents_2eproto::offsets,
    file_level_metadata_common_2fnetwork_2fcomponents_2eproto,
    file_level_enum_descriptors_common_2fnetwork_2fcomponents_2eproto,
    file_level_service_descriptors_common_2fnetwork_2fcomponents_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2fnetwork_2fcomponents_2eproto_getter() {
  return &descriptor_table_common_2fnetwork_2fcomponents_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_2fnetwork_2fcomponents_2eproto(&descriptor_table_common_2fnetwork_2fcomponents_2eproto);
// ===================================================================

class SpritePB::_Internal {
 public:
};

SpritePB::SpritePB(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SpritePB)
}
SpritePB::SpritePB(const SpritePB& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpritePB* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.texture_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.texture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.texture_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_texture().empty()) {
    _this->_impl_.texture_.Set(from._internal_texture(), _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:SpritePB)
}

inline void SpritePB::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.texture_) {}

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.texture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.texture_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SpritePB::~SpritePB() {
  // @@protoc_insertion_point(destructor:SpritePB)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpritePB::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.texture_.Destroy();
}

void SpritePB::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpritePB::Clear() {
// @@protoc_insertion_point(message_clear_start:SpritePB)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.texture_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpritePB::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string texture = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_texture();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "SpritePB.texture"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* SpritePB::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SpritePB)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string texture = 1;
  if (!this->_internal_texture().empty()) {
    const std::string& _s = this->_internal_texture();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "SpritePB.texture");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SpritePB)
  return target;
}

::size_t SpritePB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SpritePB)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string texture = 1;
  if (!this->_internal_texture().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_texture());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpritePB::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpritePB::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpritePB::GetClassData() const { return &_class_data_; }


void SpritePB::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpritePB*>(&to_msg);
  auto& from = static_cast<const SpritePB&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SpritePB)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_texture().empty()) {
    _this->_internal_set_texture(from._internal_texture());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpritePB::CopyFrom(const SpritePB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SpritePB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpritePB::IsInitialized() const {
  return true;
}

void SpritePB::InternalSwap(SpritePB* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.texture_, lhs_arena,
                                       &other->_impl_.texture_, rhs_arena);
}

::PROTOBUF_NAMESPACE_ID::Metadata SpritePB::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fnetwork_2fcomponents_2eproto_getter, &descriptor_table_common_2fnetwork_2fcomponents_2eproto_once,
      file_level_metadata_common_2fnetwork_2fcomponents_2eproto[0]);
}
// ===================================================================

class ClientConnect::_Internal {
 public:
};

ClientConnect::ClientConnect(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientConnect)
}
ClientConnect::ClientConnect(const ClientConnect& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ClientConnect* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_) {}

    , decltype(_impl_.id_) {}

    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user().empty()) {
    _this->_impl_.user_.Set(from._internal_user(), _this->GetArenaForAllocation());
  }
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:ClientConnect)
}

inline void ClientConnect::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.user_) {}

    , decltype(_impl_.id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.user_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ClientConnect::~ClientConnect() {
  // @@protoc_insertion_point(destructor:ClientConnect)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ClientConnect::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_.Destroy();
}

void ClientConnect::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ClientConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientConnect)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_.ClearToEmpty();
  _impl_.id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientConnect::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // string user = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ClientConnect.user"));
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ClientConnect::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientConnect)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  // string user = 2;
  if (!this->_internal_user().empty()) {
    const std::string& _s = this->_internal_user();
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE, "ClientConnect.user");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientConnect)
  return target;
}

::size_t ClientConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientConnect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user = 2;
  if (!this->_internal_user().empty()) {
    total_size += 1 + ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
                                    this->_internal_user());
  }

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClientConnect::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ClientConnect::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClientConnect::GetClassData() const { return &_class_data_; }


void ClientConnect::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ClientConnect*>(&to_msg);
  auto& from = static_cast<const ClientConnect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ClientConnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user().empty()) {
    _this->_internal_set_user(from._internal_user());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ClientConnect::CopyFrom(const ClientConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientConnect::IsInitialized() const {
  return true;
}

void ClientConnect::InternalSwap(ClientConnect* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_, lhs_arena,
                                       &other->_impl_.user_, rhs_arena);

  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientConnect::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fnetwork_2fcomponents_2eproto_getter, &descriptor_table_common_2fnetwork_2fcomponents_2eproto_once,
      file_level_metadata_common_2fnetwork_2fcomponents_2eproto[1]);
}
// ===================================================================

class ClientDisconnect::_Internal {
 public:
};

ClientDisconnect::ClientDisconnect(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ClientDisconnect)
}
ClientDisconnect::ClientDisconnect(const ClientDisconnect& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ClientDisconnect)
}

inline void ClientDisconnect::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.id_) { ::uint64_t{0u} }

    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ClientDisconnect::~ClientDisconnect() {
  // @@protoc_insertion_point(destructor:ClientDisconnect)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ClientDisconnect::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}

void ClientDisconnect::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ClientDisconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientDisconnect)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientDisconnect::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* ClientDisconnect::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientDisconnect)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientDisconnect)
  return target;
}

::size_t ClientDisconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientDisconnect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClientDisconnect::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ClientDisconnect::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClientDisconnect::GetClassData() const { return &_class_data_; }


void ClientDisconnect::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ClientDisconnect*>(&to_msg);
  auto& from = static_cast<const ClientDisconnect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ClientDisconnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ClientDisconnect::CopyFrom(const ClientDisconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientDisconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientDisconnect::IsInitialized() const {
  return true;
}

void ClientDisconnect::InternalSwap(ClientDisconnect* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientDisconnect::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fnetwork_2fcomponents_2eproto_getter, &descriptor_table_common_2fnetwork_2fcomponents_2eproto_once,
      file_level_metadata_common_2fnetwork_2fcomponents_2eproto[2]);
}
// ===================================================================

class UpdateComponent::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::UpdateComponent, _impl_._oneof_case_);
  static const ::SpritePB& sprite(const UpdateComponent* msg);
};

const ::SpritePB&
UpdateComponent::_Internal::sprite(const UpdateComponent* msg) {
  return *msg->_impl_.components_.sprite_;
}
void UpdateComponent::set_allocated_sprite(::SpritePB* sprite) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_components();
  if (sprite) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(sprite);
    if (message_arena != submessage_arena) {
      sprite = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sprite, submessage_arena);
    }
    set_has_sprite();
    _impl_.components_.sprite_ = sprite;
  }
  // @@protoc_insertion_point(field_set_allocated:UpdateComponent.sprite)
}
UpdateComponent::UpdateComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UpdateComponent)
}
UpdateComponent::UpdateComponent(const UpdateComponent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateComponent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_) {}

    , decltype(_impl_.components_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.entity_id_ = from._impl_.entity_id_;
  clear_has_components();
  switch (from.components_case()) {
    case kSprite: {
      _this->_internal_mutable_sprite()->::SpritePB::MergeFrom(
          from._internal_sprite());
      break;
    }
    case COMPONENTS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:UpdateComponent)
}

inline void UpdateComponent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_) { ::uint64_t{0u} }

    , decltype(_impl_.components_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_components();
}

UpdateComponent::~UpdateComponent() {
  // @@protoc_insertion_point(destructor:UpdateComponent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateComponent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_components()) {
    clear_components();
  }
}

void UpdateComponent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateComponent::clear_components() {
// @@protoc_insertion_point(one_of_clear_start:UpdateComponent)
  switch (components_case()) {
    case kSprite: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.components_.sprite_;
      }
      break;
    }
    case COMPONENTS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = COMPONENTS_NOT_SET;
}


void UpdateComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateComponent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_id_ = ::uint64_t{0u};
  clear_components();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateComponent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .SpritePB sprite = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sprite(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* UpdateComponent::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpdateComponent)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_entity_id(), target);
  }

  // .SpritePB sprite = 2;
  if (components_case() == kSprite) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::sprite(this),
        _Internal::sprite(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateComponent)
  return target;
}

::size_t UpdateComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateComponent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_entity_id());
  }

  switch (components_case()) {
    // .SpritePB sprite = 2;
    case kSprite: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.components_.sprite_);
      break;
    }
    case COMPONENTS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateComponent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateComponent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateComponent::GetClassData() const { return &_class_data_; }


void UpdateComponent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateComponent*>(&to_msg);
  auto& from = static_cast<const UpdateComponent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UpdateComponent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_entity_id() != 0) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  switch (from.components_case()) {
    case kSprite: {
      _this->_internal_mutable_sprite()->::SpritePB::MergeFrom(
          from._internal_sprite());
      break;
    }
    case COMPONENTS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateComponent::CopyFrom(const UpdateComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateComponent::IsInitialized() const {
  return true;
}

void UpdateComponent::InternalSwap(UpdateComponent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.entity_id_, other->_impl_.entity_id_);
  swap(_impl_.components_, other->_impl_.components_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateComponent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fnetwork_2fcomponents_2eproto_getter, &descriptor_table_common_2fnetwork_2fcomponents_2eproto_once,
      file_level_metadata_common_2fnetwork_2fcomponents_2eproto[3]);
}
// ===================================================================

class CreateComponent::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::CreateComponent, _impl_._oneof_case_);
  static const ::SpritePB& sprite(const CreateComponent* msg);
};

const ::SpritePB&
CreateComponent::_Internal::sprite(const CreateComponent* msg) {
  return *msg->_impl_.components_.sprite_;
}
void CreateComponent::set_allocated_sprite(::SpritePB* sprite) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_components();
  if (sprite) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(sprite);
    if (message_arena != submessage_arena) {
      sprite = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, sprite, submessage_arena);
    }
    set_has_sprite();
    _impl_.components_.sprite_ = sprite;
  }
  // @@protoc_insertion_point(field_set_allocated:CreateComponent.sprite)
}
CreateComponent::CreateComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CreateComponent)
}
CreateComponent::CreateComponent(const CreateComponent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateComponent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_) {}

    , decltype(_impl_.components_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.entity_id_ = from._impl_.entity_id_;
  clear_has_components();
  switch (from.components_case()) {
    case kSprite: {
      _this->_internal_mutable_sprite()->::SpritePB::MergeFrom(
          from._internal_sprite());
      break;
    }
    case COMPONENTS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:CreateComponent)
}

inline void CreateComponent::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_) { ::uint64_t{0u} }

    , decltype(_impl_.components_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_components();
}

CreateComponent::~CreateComponent() {
  // @@protoc_insertion_point(destructor:CreateComponent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateComponent::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_components()) {
    clear_components();
  }
}

void CreateComponent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateComponent::clear_components() {
// @@protoc_insertion_point(one_of_clear_start:CreateComponent)
  switch (components_case()) {
    case kSprite: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.components_.sprite_;
      }
      break;
    }
    case COMPONENTS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = COMPONENTS_NOT_SET;
}


void CreateComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateComponent)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_id_ = ::uint64_t{0u};
  clear_components();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateComponent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 8)) {
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .SpritePB sprite = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_sprite(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* CreateComponent::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CreateComponent)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        1, this->_internal_entity_id(), target);
  }

  // .SpritePB sprite = 2;
  if (components_case() == kSprite) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::sprite(this),
        _Internal::sprite(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateComponent)
  return target;
}

::size_t CreateComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateComponent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_entity_id());
  }

  switch (components_case()) {
    // .SpritePB sprite = 2;
    case kSprite: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.components_.sprite_);
      break;
    }
    case COMPONENTS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateComponent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateComponent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateComponent::GetClassData() const { return &_class_data_; }


void CreateComponent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateComponent*>(&to_msg);
  auto& from = static_cast<const CreateComponent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CreateComponent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_entity_id() != 0) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  switch (from.components_case()) {
    case kSprite: {
      _this->_internal_mutable_sprite()->::SpritePB::MergeFrom(
          from._internal_sprite());
      break;
    }
    case COMPONENTS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateComponent::CopyFrom(const CreateComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateComponent::IsInitialized() const {
  return true;
}

void CreateComponent::InternalSwap(CreateComponent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);

  swap(_impl_.entity_id_, other->_impl_.entity_id_);
  swap(_impl_.components_, other->_impl_.components_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateComponent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fnetwork_2fcomponents_2eproto_getter, &descriptor_table_common_2fnetwork_2fcomponents_2eproto_once,
      file_level_metadata_common_2fnetwork_2fcomponents_2eproto[4]);
}
// ===================================================================

class Packet::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::Packet, _impl_._oneof_case_);
  static const ::ClientConnect& client_connect(const Packet* msg);
  static const ::ClientDisconnect& client_disconnect(const Packet* msg);
  static const ::UpdateComponent& update_component(const Packet* msg);
  static const ::CreateComponent& create_component(const Packet* msg);
};

const ::ClientConnect&
Packet::_Internal::client_connect(const Packet* msg) {
  return *msg->_impl_.commands_.client_connect_;
}
const ::ClientDisconnect&
Packet::_Internal::client_disconnect(const Packet* msg) {
  return *msg->_impl_.commands_.client_disconnect_;
}
const ::UpdateComponent&
Packet::_Internal::update_component(const Packet* msg) {
  return *msg->_impl_.commands_.update_component_;
}
const ::CreateComponent&
Packet::_Internal::create_component(const Packet* msg) {
  return *msg->_impl_.commands_.create_component_;
}
void Packet::set_allocated_client_connect(::ClientConnect* client_connect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_commands();
  if (client_connect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(client_connect);
    if (message_arena != submessage_arena) {
      client_connect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, client_connect, submessage_arena);
    }
    set_has_client_connect();
    _impl_.commands_.client_connect_ = client_connect;
  }
  // @@protoc_insertion_point(field_set_allocated:Packet.client_connect)
}
void Packet::set_allocated_client_disconnect(::ClientDisconnect* client_disconnect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_commands();
  if (client_disconnect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(client_disconnect);
    if (message_arena != submessage_arena) {
      client_disconnect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, client_disconnect, submessage_arena);
    }
    set_has_client_disconnect();
    _impl_.commands_.client_disconnect_ = client_disconnect;
  }
  // @@protoc_insertion_point(field_set_allocated:Packet.client_disconnect)
}
void Packet::set_allocated_update_component(::UpdateComponent* update_component) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_commands();
  if (update_component) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(update_component);
    if (message_arena != submessage_arena) {
      update_component = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update_component, submessage_arena);
    }
    set_has_update_component();
    _impl_.commands_.update_component_ = update_component;
  }
  // @@protoc_insertion_point(field_set_allocated:Packet.update_component)
}
void Packet::set_allocated_create_component(::CreateComponent* create_component) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_commands();
  if (create_component) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(create_component);
    if (message_arena != submessage_arena) {
      create_component = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_component, submessage_arena);
    }
    set_has_create_component();
    _impl_.commands_.create_component_ = create_component;
  }
  // @@protoc_insertion_point(field_set_allocated:Packet.create_component)
}
Packet::Packet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Packet)
}
Packet::Packet(const Packet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Packet* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.commands_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_commands();
  switch (from.commands_case()) {
    case kClientConnect: {
      _this->_internal_mutable_client_connect()->::ClientConnect::MergeFrom(
          from._internal_client_connect());
      break;
    }
    case kClientDisconnect: {
      _this->_internal_mutable_client_disconnect()->::ClientDisconnect::MergeFrom(
          from._internal_client_disconnect());
      break;
    }
    case kUpdateComponent: {
      _this->_internal_mutable_update_component()->::UpdateComponent::MergeFrom(
          from._internal_update_component());
      break;
    }
    case kCreateComponent: {
      _this->_internal_mutable_create_component()->::CreateComponent::MergeFrom(
          from._internal_create_component());
      break;
    }
    case COMMANDS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Packet)
}

inline void Packet::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.commands_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_commands();
}

Packet::~Packet() {
  // @@protoc_insertion_point(destructor:Packet)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Packet::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_commands()) {
    clear_commands();
  }
}

void Packet::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Packet::clear_commands() {
// @@protoc_insertion_point(one_of_clear_start:Packet)
  switch (commands_case()) {
    case kClientConnect: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.commands_.client_connect_;
      }
      break;
    }
    case kClientDisconnect: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.commands_.client_disconnect_;
      }
      break;
    }
    case kUpdateComponent: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.commands_.update_component_;
      }
      break;
    }
    case kCreateComponent: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.commands_.create_component_;
      }
      break;
    }
    case COMMANDS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = COMMANDS_NOT_SET;
}


void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:Packet)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_commands();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Packet::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ClientConnect client_connect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_client_connect(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .ClientDisconnect client_disconnect = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_client_disconnect(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .UpdateComponent update_component = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_component(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      // .CreateComponent create_component = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_create_component(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* Packet::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Packet)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (commands_case()) {
    case kClientConnect: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, _Internal::client_connect(this),
          _Internal::client_connect(this).GetCachedSize(), target, stream);
      break;
    }
    case kClientDisconnect: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, _Internal::client_disconnect(this),
          _Internal::client_disconnect(this).GetCachedSize(), target, stream);
      break;
    }
    case kUpdateComponent: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, _Internal::update_component(this),
          _Internal::update_component(this).GetCachedSize(), target, stream);
      break;
    }
    case kCreateComponent: {
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, _Internal::create_component(this),
          _Internal::create_component(this).GetCachedSize(), target, stream);
      break;
    }
    default: ;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Packet)
  return target;
}

::size_t Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Packet)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (commands_case()) {
    // .ClientConnect client_connect = 1;
    case kClientConnect: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.commands_.client_connect_);
      break;
    }
    // .ClientDisconnect client_disconnect = 2;
    case kClientDisconnect: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.commands_.client_disconnect_);
      break;
    }
    // .UpdateComponent update_component = 3;
    case kUpdateComponent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.commands_.update_component_);
      break;
    }
    // .CreateComponent create_component = 4;
    case kCreateComponent: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.commands_.create_component_);
      break;
    }
    case COMMANDS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Packet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Packet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Packet::GetClassData() const { return &_class_data_; }


void Packet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Packet*>(&to_msg);
  auto& from = static_cast<const Packet&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Packet)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.commands_case()) {
    case kClientConnect: {
      _this->_internal_mutable_client_connect()->::ClientConnect::MergeFrom(
          from._internal_client_connect());
      break;
    }
    case kClientDisconnect: {
      _this->_internal_mutable_client_disconnect()->::ClientDisconnect::MergeFrom(
          from._internal_client_disconnect());
      break;
    }
    case kUpdateComponent: {
      _this->_internal_mutable_update_component()->::UpdateComponent::MergeFrom(
          from._internal_update_component());
      break;
    }
    case kCreateComponent: {
      _this->_internal_mutable_create_component()->::CreateComponent::MergeFrom(
          from._internal_create_component());
      break;
    }
    case COMMANDS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Packet::IsInitialized() const {
  return true;
}

void Packet::InternalSwap(Packet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.commands_, other->_impl_.commands_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Packet::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fnetwork_2fcomponents_2eproto_getter, &descriptor_table_common_2fnetwork_2fcomponents_2eproto_once,
      file_level_metadata_common_2fnetwork_2fcomponents_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::SpritePB*
Arena::CreateMaybeMessage< ::SpritePB >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SpritePB >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientConnect*
Arena::CreateMaybeMessage< ::ClientConnect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientConnect >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientDisconnect*
Arena::CreateMaybeMessage< ::ClientDisconnect >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ClientDisconnect >(arena);
}
template<> PROTOBUF_NOINLINE ::UpdateComponent*
Arena::CreateMaybeMessage< ::UpdateComponent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::UpdateComponent >(arena);
}
template<> PROTOBUF_NOINLINE ::CreateComponent*
Arena::CreateMaybeMessage< ::CreateComponent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CreateComponent >(arena);
}
template<> PROTOBUF_NOINLINE ::Packet*
Arena::CreateMaybeMessage< ::Packet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Packet >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
